LLVMFuzzerTestOneInput:
    7|      1|int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {
    8|       |
    9|      1|    char output[UINT256_DEC_STRING_MAX_LENGTH] = {0};
   10|       |
   11|      1|    bip32_path_t bip32_path = {0};
   12|      1|    bip32_path.path_len = Size/4;
   13|       |    
   14|      1|    memcpy(bip32_path.path, Data, MIN(MAX_BIP32_PATH * 4, Size));
  ------------------
  |  |    5|      1|#define MIN(a,b) (((a)<(b))?(a):(b))
  |  |  ------------------
  |  |  |  Branch (5:19): [True: 0, False: 1]
  |  |  ------------------
  ------------------
   15|      1|    bip32_path_format(&bip32_path, output, sizeof(output));
   16|       |    
   17|      1|    return 0;
   18|      1|}

bip32_path_format:
   29|      1|bool bip32_path_format(const bip32_path_t *bip32_path, char *out, size_t out_len) {
   30|      1|    const uint8_t bip32_path_len = bip32_path->path_len;
   31|       |
   32|      1|    if (bip32_path_len == 0 || bip32_path_len > MAX_BIP32_PATH) {
  ------------------
  |  |   10|      1|#define MAX_BIP32_PATH 10
  ------------------
  |  Branch (32:9): [True: 0, False: 1]
  |  Branch (32:32): [True: 0, False: 1]
  ------------------
   33|      0|        return false;
   34|      0|    }
   35|       |
   36|      1|    size_t offset = 0;
   37|       |
   38|      6|    for (uint16_t i = 0; i < bip32_path_len; i++) {
  ------------------
  |  Branch (38:26): [True: 5, False: 1]
  ------------------
   39|      5|        size_t written;
   40|       |
   41|      5|        snprintf(out + offset, out_len - offset, "%d", bip32_path->path[i] & 0x7FFFFFFFu);
   42|      5|        written = strlen(out + offset);
   43|      5|        if (written == 0 || written >= out_len - offset) {
  ------------------
  |  Branch (43:13): [True: 0, False: 5]
  |  Branch (43:29): [True: 0, False: 5]
  ------------------
   44|      0|            explicit_bzero(out, out_len);
   45|      0|            return false;
   46|      0|        }
   47|      5|        offset += written;
   48|       |
   49|      5|        if ((bip32_path->path[i] & 0x80000000u) != 0) {
  ------------------
  |  Branch (49:13): [True: 3, False: 2]
  ------------------
   50|      3|            snprintf(out + offset, out_len - offset, "'");
   51|      3|            written = strlen(out + offset);
   52|      3|            if (written == 0 || written >= out_len - offset) {
  ------------------
  |  Branch (52:17): [True: 0, False: 3]
  |  Branch (52:33): [True: 0, False: 3]
  ------------------
   53|      0|                explicit_bzero(out, out_len);
   54|      0|                return false;
   55|      0|            }
   56|      3|            offset += written;
   57|      3|        }
   58|       |
   59|      5|        if (i != bip32_path_len - 1) {
  ------------------
  |  Branch (59:13): [True: 4, False: 1]
  ------------------
   60|      4|            snprintf(out + offset, out_len - offset, "/");
   61|      4|            written = strlen(out + offset);
   62|      4|            if (written == 0 || written >= out_len - offset) {
  ------------------
  |  Branch (62:17): [True: 0, False: 4]
  |  Branch (62:33): [True: 0, False: 4]
  ------------------
   63|      0|                explicit_bzero(out, out_len);
   64|      0|                return false;
   65|      0|            }
   66|      4|            offset += written;
   67|      4|        }
   68|      5|    }
   69|       |
   70|      1|    return true;
   71|      1|}

